services:
  postgres:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
  userservice:
    build:
      context: ../../services/userservice
      dockerfile: ../../local_docker/userservice/Dockerfile
    environment:
      - USER_SERVICE_CONFIG_PATH=./config/dev.yaml
    env_file:
      - .env
    networks:
      - backend
    develop:
      watch:
        - action: rebuild
          path: ../../services/userservice
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "44044:44044"
    healthcheck:
      test: [ "CMD", "grpc_health_probe", "-addr=localhost:50051" ]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      - postgres
  migrate:
    build:
      context: ../../services/userservice
      dockerfile: ../../local_docker/userservice/Dockerfile
    command: [ "./migrate" ]
    environment:
      - USER_SERVICE_CONFIG_PATH=./config/dev.yaml
    env_file:
      - .env
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD", "grpc_health_probe", "-addr=localhost:50051" ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - backend
networks:
  backend:
volumes:
  postgres_data:
    driver: local